# SPDX-License-Identifier:	MPL-2.0

if(${OPUSARIUM_CMAKE_ARCHITECTURE_INCGUARD})
    return()
endif()
set(OPUSARIUM_CMAKE_ARCHITECTURE_INCGUARD TRUE)

try_run(
    run_result_unused
    compile_result_unused
    "${CMAKE_BINARY_DIR}"
    "${CMAKE_CURRENT_LIST_DIR}/OpusariumArchitectureDetection.c"
    COMPILE_OUTPUT_VARIABLE OPUSARIUM_CMAKE_ARCHITECTURE_NAME
)
string(REGEX MATCH "OPUSARIUM_TEST_ARCHITECTURE_RESULT ([a-zA-Z0-9_]+)"
    OPUSARIUM_CMAKE_ARCHITECTURE_NAME "${OPUSARIUM_CMAKE_ARCHITECTURE_NAME}")
string(REPLACE "OPUSARIUM_TEST_ARCHITECTURE_RESULT " ""
    OPUSARIUM_CMAKE_ARCHITECTURE_NAME "${OPUSARIUM_CMAKE_ARCHITECTURE_NAME}")
if(NOT OPUSARIUM_CMAKE_ARCHITECTURE_NAME)
    set(OPUSARIUM_CMAKE_ARCHITECTURE_NAME unknown)
endif()

if(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "armv1")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_ARMV1)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_ARMV1)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "armv2")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_ARMV2)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_ARMV2)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "armv3")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_ARMV3)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_ARMV3)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "armv4")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_ARMV4)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_ARMV4)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "armv5")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_ARMV5)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_ARMV5)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "armv5t")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_ARMV5T)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_ARMV5T)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "armv6")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_ARMV6)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_ARMV6)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "armv6t2")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_ARMV6T2)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_ARMV6T2)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "armv7")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_ARMV7)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_ARMV7)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "arm64")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_ARM64)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_ARM64)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "i386")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_I386)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_I386)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "amd64")
    include(${CMAKE_CURRENT_SOURCE_DIR}/mktools/archexts/OpusariumAMD64Detection.cmake)
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_AMD64)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_AMD64)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "mips1")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_MIPS1)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_MIPS1)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "mips2")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_MIPS2)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_MIPS2)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "mips3")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_MIPS3)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_MIPS3)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "mips4")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_MIPS4)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_MIPS4)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "ppc")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_PPC)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_PPC)
    endif()
elseif(${OPUSARIUM_CMAKE_ARCHITECTURE_NAME} STREQUAL "ppc64")
    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
        add_definitions(-DOPUSARIUM_BUILD_ARCHITECTURE_PPC64)
    else()
        add_compile_definitions(OPUSARIUM_BUILD_ARCHITECTURE_PPC64)
    endif()
else()
    message(FATAL_ERROR "Unsupported architecture: ${OPUSARIUM_CMAKE_ARCHITECTURE_NAME}")
endif()
message(STATUS "Opusarium architecture detected: ${OPUSARIUM_CMAKE_ARCHITECTURE_NAME}")
